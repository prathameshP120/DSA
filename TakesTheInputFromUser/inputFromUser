✅ 1. Take an Integer (Number) as Input
java
Copy
Edit
import java.util.Scanner;

public class InputInteger {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();
        System.out.println("You entered: " + num);
    }
}

✅ 2. Take a String as Input
import java.util.Scanner;

public class InputString {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();  // Takes the whole line
        System.out.println("You entered: " + str);
    }
}
✅ 3. Take an Array of Integers as Input
java
Copy
Edit
import java.util.Scanner;

public class InputArray {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter array size: ");
        int n = sc.nextInt();

        int[] arr = new int[n];
        System.out.println("Enter " + n + " integers:");
        for(int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        System.out.print("Array elements: ");
        for(int num : arr) {
            System.out.print(num + " ");
        }
    }
}
✅ 4. Take an ArrayList of Integers as Input
java
Copy
Edit
import java.util.ArrayList;
import java.util.Scanner;

public class InputArrayList {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> list = new ArrayList<>();

        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();

        System.out.println("Enter " + n + " integers:");
        for(int i = 0; i < n; i++) {
            list.add(sc.nextInt());
        }

        System.out.println("ArrayList elements: " + list);
    }
}
⚡ Bonus Tip:
For space-separated input like:

text
Copy
Edit
10 20 30 40 50
You can do:

java
Copy
Edit
String[] tokens = sc.nextLine().split(" ");
int[] arr = new int[tokens.length];
for (int i = 0; i < tokens.length; i++) {
    arr[i] = Integer.parseInt(tokens[i]);
}
//Let me know if you want input examples for other types too — like 2D arrays, Maps, Custom classes, etc.

✅ 1. Reading a Space-Separated Line into an Integer Array
java
Copy
Edit
Scanner sc = new Scanner(System.in);
String[] tokens = sc.nextLine().split(" ");
int[] arr = new int[tokens.length];

for (int i = 0; i < tokens.length; i++) {
    arr[i] = Integer.parseInt(tokens[i]);
}
✅ 2. Reading a 2D Array (Matrix)
java
Copy
Edit
int rows = sc.nextInt();
int cols = sc.nextInt();
int[][] matrix = new int[rows][cols];

for (int i = 0; i < rows; i++) {
    for (int j = 0; j < cols; j++) {
        matrix[i][j] = sc.nextInt();
    }
}
✅ 3. Reading a List of Strings into an ArrayList
java
Copy
Edit
int n = sc.nextInt();
sc.nextLine(); // consume newline

ArrayList<String> list = new ArrayList<>();
for (int i = 0; i < n; i++) {
    list.add(sc.nextLine());
}
✅ 4. Reading Characters from a String
java
Copy
Edit
String input = sc.nextLine();
char[] chars = input.toCharArray();
✅ 5. Reading a Boolean Expression Input as String
java
Copy
Edit
System.out.println("Enter a logical expression:");
String logicalExpr = sc.nextLine();  // e.g. (age > 18 && salary > 50000)
✅ 6. Reading Delimited Input into ArrayList
java
Copy
Edit
String input = sc.nextLine(); // e.g. "a,b,c,d"
String[] items = input.split(",");
ArrayList<String> list = new ArrayList<>(Arrays.asList(items));
✅ 7. Reading Input Until EOF (End of File)
Useful in competitive programming:

java
Copy
Edit
while (sc.hasNextLine()) {
    String line = sc.nextLine();
    System.out.println("Read: " + line);
}
✅ 8. Reading a Mixed Type Input (int + string)
java
Copy
Edit
int age = sc.nextInt();
sc.nextLine(); // consume leftover newline
String name = sc.nextLine();
✅ 9. Reading a Set of Unique Integers
java
Copy
Edit
Set<Integer> set = new HashSet<>();
int n = sc.nextInt();
for (int i = 0; i < n; i++) {
    set.add(sc.nextInt());
}
✅ 10. Reading and Sorting an ArrayList
java
Copy
Edit
ArrayList<Integer> list = new ArrayList<>();
int n = sc.nextInt();
for (int i = 0; i < n; i++) {
    list.add(sc.nextInt());
}
Collections.sort(list); // ascending
